{
	"info": {
		"_postman_id": "22715ebd-33e7-486a-8603-d22580b9191c",
		"name": "GameNight",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21232957"
	},
	"item": [
		{
			"name": "Get User Token",
			"item": [
				{
					"name": "Get user JWT Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var headerValue = pm.response.headers.get(\"Authorization\");\r",
									"var token = headerValue.split(' ')[1];\r",
									"pm.environment.set(\"AuthToken\", token);\r",
									"pm.environment.set(\"UserToken\", token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"user\",\r\n    \"password\" : \"userwachtwoord\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/auth",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Admin JWT Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var headerValue = pm.response.headers.get(\"Authorization\");\r",
									"var token = headerValue.split(' ')[1];\r",
									"pm.environment.set(\"AuthToken\", token);\r",
									"pm.environment.set(\"AdminToken\", token);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"adminwachtwoord\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/auth",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "game",
			"item": [
				{
					"name": "AddGame",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"name\": \"Pong\",\r\n     \"manufacturer\":  \"Nitendo\",\r\n     \"minimumPlayers\": 1,\r\n     \"maximumPlayers\": 2,\r\n     \"age\": 10 ,\r\n     \"minimumDuration\": 2,\r\n     \"averageDuration\": 10,\r\n     \"category\":\"OTHER\",\r\n     \"type\":\"Computer Game\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/games",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"games"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unhappy AddGame Validation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"name\": \"\",\r\n     \"manufacturer\":  \"\",\r\n     \"minimumPlayers\": 0,\r\n     \"maximumPlayers\": 0,\r\n     \"age\": 0 ,\r\n     \"minimumDuration\": 30,\r\n     \"averageDuration\": 120,\r\n     \"category\":\"BORD\",\r\n     \"type\":\"gezelschap\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/games",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"games"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Game List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/games",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"games"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Game By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/games/game/1",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"games",
								"game",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update GameBy ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"name\": \"Ping Pong\",\r\n     \"manufacturer\":  \"Sony\",\r\n     \"minimumPlayers\": 1,\r\n     \"maximumPlayers\": 1,\r\n     \"age\": 1 ,\r\n     \"minimumDuration\": 1,\r\n     \"averageDuration\": 1,\r\n     \"category\":\"OTHER\",\r\n     \"type\":\"changed\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/games/game/1",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"games",
								"game",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Game By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/games/game/1",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"games",
								"game",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnHappy Delete By ID Exception",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}//games/game/10",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"",
								"games",
								"game",
								"10"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AuthToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Parse the request body as JSON\r",
									"var requestBody = pm.request.body;\r",
									"var jsonData = JSON.parse(requestBody);\r",
									"\r",
									"// Extract username and password\r",
									"var username = jsonData.username;\r",
									"var password = jsonData.password;\r",
									"\r",
									"// Set the username and password as variables\r",
									"pm.environment.set(\"username\", username);\r",
									"pm.environment.set(\"password\", password);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"Henkie\",\r\n    \"password\" : \"wachtwoordhenkie\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/users/users",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"users",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var headerValue = pm.response.headers.get(\"Authorization\");\r",
									"var token = headerValue.split(' ')[1];\r",
									"pm.environment.set(\"AuthToken\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"{{username}}\",\r\n    \"password\" : \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/auth",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Review",
			"item": [
				{
					"name": "Create review",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userReview\":\"Wat een bout spel zeg\",\r\n    \"starRating\":1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/review/102",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"review",
								"102"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AuthToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Validation Userrigts",
			"item": [
				{
					"name": "As Admin",
					"item": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{AdminToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "As User",
					"item": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{UserToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	]
}