{
	"info": {
		"_postman_id": "22715ebd-33e7-486a-8603-d22580b9191c",
		"name": "GameNight",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21232957"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get user JWT Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var headerValue = pm.response.headers.get(\"Authorization\");\r",
									"var token = headerValue.split(' ')[1];\r",
									"pm.environment.set(\"AuthToken\", token);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"testUserUser\",\r\n    \"password\" : \"userwachtwoord\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/auth",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Admin AND USER JWT Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var headerValue = pm.response.headers.get(\"Authorization\");\r",
									"var token = headerValue.split(' ')[1];\r",
									"pm.environment.set(\"AuthToken\", token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"testUserUserAndAdmin\",\r\n    \"password\" : \"adminwachtwoord\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/auth",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Admin JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var headerValue = pm.response.headers.get(\"Authorization\");\r",
									"var token = headerValue.split(' ')[1];\r",
									"pm.environment.set(\"AuthToken\", token);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"testUserAdminonly\",\r\n    \"password\" : \"adminwachtwoord\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/auth",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SUPER JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var headerValue = pm.response.headers.get(\"Authorization\");\r",
									"var token = headerValue.split(' ')[1];\r",
									"pm.environment.set(\"AuthToken\", token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"ChuckNorris\",\r\n    \"password\" : \"adminwachtwoord\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/auth",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clear JWToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"AuthToken\", \"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/user/clear",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"user",
								"clear"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "game",
			"item": [
				{
					"name": "AddGame",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"name\": \"Pong\",\r\n     \"manufacturer\":  \"Nitendo\",\r\n     \"minimumPlayers\": 1,\r\n     \"maximumPlayers\": 2,\r\n     \"age\": 10 ,\r\n     \"minimumDuration\": 2,\r\n     \"averageDuration\": 10,\r\n     \"category\":\"OTHER\",\r\n     \"type\":\"Computer Game\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/game/create",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"game",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Game List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/game/games",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"game",
								"games"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Game By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/game/101",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"game",
								"101"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update GameBy ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"name\": \"Ping Pong\",\r\n     \"manufacturer\":  \"Sony\",\r\n     \"minimumPlayers\": 1,\r\n     \"maximumPlayers\": 1,\r\n     \"age\": 1 ,\r\n     \"minimumDuration\": 1,\r\n     \"averageDuration\": 1,\r\n     \"category\":\"OTHER\",\r\n     \"type\":\"changed\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/game/update/101",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"game",
								"update",
								"101"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Game By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/game/delete/108",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"game",
								"delete",
								"108"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AuthToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Parse the request body as JSON\r",
									"var requestBody = pm.request.body;\r",
									"var jsonData = JSON.parse(requestBody);\r",
									"\r",
									"// Extract username and password\r",
									"var username = jsonData.username;\r",
									"var password = jsonData.password;\r",
									"\r",
									"// Set the username and password as variables\r",
									"pm.environment.set(\"username\", username);\r",
									"pm.environment.set(\"password\", password);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"Lekkerdan\",\r\n    \"password\" : \"lekkerdan\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/user/create",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var headerValue = pm.response.headers.get(\"Authorization\");\r",
									"var token = headerValue.split(' ')[1];\r",
									"pm.environment.set(\"AuthToken\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"{{username}}\",\r\n    \"password\" : \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/auth",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/user/users",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"user",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/user/101",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"user",
								"101"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Parse the request body as JSON\r",
									"var requestBody = pm.request.body;\r",
									"var jsonData = JSON.parse(requestBody);\r",
									"\r",
									"// Extract username and password\r",
									"var username = jsonData.username;\r",
									"var password = jsonData.password;\r",
									"\r",
									"// Set the username and password as variables\r",
									"pm.environment.set(\"username\", username);\r",
									"pm.environment.set(\"password\", password);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"karel\",\r\n    \"password\" : \"bloepbloep\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/user/update/1",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"user",
								"update",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/user/delete/1",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"user",
								"delete",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AuthToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Review",
			"item": [
				{
					"name": "Create review",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"gameID\" : 101,\r\n    \"userReview\":\"mooi spel, maar wel complex\",\r\n    \"starRating\":2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/review/create",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"review",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get review List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/review/reviews",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"review",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "get review by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/review/101",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"review",
								"101"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Review",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userReview\":\"mooi spel, maar wel complex aangepast\",\r\n    \"starRating\":4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/review/update/101",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"review",
								"update",
								"101"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Review by ID (DATABASE CONSTRAINT)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/review/delete/101",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"review",
								"delete",
								"101"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AuthToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Expansion",
			"item": [
				{
					"name": "Add an expansion",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Foundations Expansion\",\r\n    \"manufacturer\": \"CMYK\",\r\n    \"minimumPlayers\": 60,\r\n    \"maximumPlayers\": 6,\r\n    \"age\": 10,\r\n    \"minimumDuration\": 60,\r\n    \"averageDuration\": 120,\r\n    \"category\": \"BORD\",\r\n    \"type\": \"COOP\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/expansion/create/106",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"expansion",
								"create",
								"106"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get expansion list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/expansion/expansions",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"expansion",
								"expansions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get expansion  ByID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/expansion/110",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"expansion",
								"110"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit  expansion",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"gameID\": 110,\r\n    \"name\": \"changed\",\r\n    \"manufacturer\": \"changed\",\r\n    \"minimumPlayers\": 10,\r\n    \"maximumPlayers\": 1,\r\n    \"age\": 11,\r\n    \"minimumDuration\": 30,\r\n    \"averageDuration\": 90,\r\n    \"category\": \"BORD\",\r\n    \"type\": \"GezeldscSpel\",\r\n    \"averageStarValue\": null,\r\n    \"baseGameID\": 104\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/expansion/update/110",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"expansion",
								"update",
								"110"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a expansin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/expansion/delete/110",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"expansion",
								"delete",
								"110"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AuthToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Logging",
			"item": [
				{
					"name": "get log",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/log/getlog",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"log",
								"getlog"
							]
						}
					},
					"response": []
				},
				{
					"name": "false login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"%ADDCLIENT\",\r\n    \"password\" : \"HAckerTheFlag\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localBasedUrl}}/auth",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AuthToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Manual",
			"item": [
				{
					"name": "Upload a Manual",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{localBasedUrl}}/manual/111",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"manual",
								"111"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Manual",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Code/GameNight/src/main/resources/Eindopdracht Backend 3.4 .pdf"
								}
							]
						},
						"url": {
							"raw": "{{localBasedUrl}}/manual/1",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"manual",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get manual list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localBasedUrl}}/manual/manuals",
							"host": [
								"{{localBasedUrl}}"
							],
							"path": [
								"manual",
								"manuals"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{AuthToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}